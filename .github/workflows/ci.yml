name: Deno CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  non-e2e-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.5.x
          cache: true
      - name: Check
        run: deno task check
      - name: Test
        run: deno task test
      - name: Build
        run: deno task build
      - name: Fmt
        run: deno task fmt
      - name: Check coverage threshold (80%)
        run: |
          COVERAGE_OUTPUT=$(deno task coverage)
          echo "$COVERAGE_OUTPUT"
          COVERAGE=$(echo "$COVERAGE_OUTPUT" | grep "All files" | sed 's/|//g' | awk '{print $NF}')
          deno eval "
            const coverage = parseFloat('${COVERAGE}');
            if (isNaN(coverage)) {
              console.error('ERROR: Could not parse coverage value');
              Deno.exit(1);
            }
            if (coverage < 80) {
              console.error(\`ERROR: Coverage \${coverage}% is below the required 80% threshold\`);
              Deno.exit(1);
            } else {
              console.log(\`SUCCESS: Coverage \${coverage}% meets the 80% threshold\`);
            }
          "
  e2e-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.5.x
          cache: true
      - name: Install Playwright browsers
        run: deno run --allow-all npm:playwright install chromium --with-deps
      - name: Run e2e tests
        run: deno task test:e2e
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: reports/playwright-report/
          retention-days: 30
  ci:
    runs-on: ubuntu-latest
    needs:
      - non-e2e-tests
      - e2e-tests
    steps:
      - name: CI success
        run: echo "CI successful"
